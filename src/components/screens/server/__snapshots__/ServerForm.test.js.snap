// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<div>
  <form
    onSubmit={[Function]}
  >
    <div
      style={
        Object {
          "display": "block",
        }
      }
    >
      <div
        className="pt-form-group"
      >
        <label
          className="pt-label"
          htmlFor={undefined}
        >
          Server Setting Name
        </label>
        <div
          className="pt-form-content"
        >
          <input
            className="pt-input "
            defaultValue={null}
            name="serverSettingName"
            onBlur={[Function]}
            onChange={[Function]}
            onDragStart={[Function]}
            onDrop={[Function]}
            onFocus={[Function]}
            required={true}
            type="text"
            value=""
            width={300}
          />
          <div
            className="pt-form-helper-text"
          >
            The label that will be used for this server connection setting.
          </div>
        </div>
      </div>
    </div>
    <div
      style={
        Object {
          "display": "none",
        }
      }
    >
      <div
        className="pt-form-group"
      >
        <label
          className="pt-label"
          htmlFor={undefined}
        >
          Server ID
        </label>
        <div
          className="pt-form-content"
        >
          <div
            style={
              Object {
                "display": "none",
              }
            }
          >
            <label
              className="pt-control"
            >
              <input
                className=""
                intent=""
                name="serverID"
                onBlur={[Function]}
                onChange={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                onFocus={[Function]}
                type="hidden"
                value=""
              />
              <span
                className="pt-control-indicator"
              />
              Server ID
            </label>
          </div>
          <div
            className="pt-form-helper-text"
          >
            Hidden Server ID
          </div>
        </div>
      </div>
    </div>
    <div
      style={
        Object {
          "display": "block",
        }
      }
    >
      <div
        className="pt-form-group"
      >
        <label
          className="pt-label"
          htmlFor={undefined}
        >
          Server Hostname
        </label>
        <div
          className="pt-form-content"
        >
          <input
            className="pt-input "
            defaultValue={null}
            name="hostname"
            onBlur={[Function]}
            onChange={[Function]}
            onDragStart={[Function]}
            onDrop={[Function]}
            onFocus={[Function]}
            required={true}
            type="text"
            value=""
            width={300}
          />
          <div
            className="pt-form-helper-text"
          >
            A hostname or IP address, example localhost, serial-box.com, or 192.168.5.10.
          </div>
        </div>
      </div>
    </div>
    <div
      style={
        Object {
          "display": "block",
        }
      }
    >
      <div
        className="pt-form-group"
      >
        <label
          className="pt-label"
          htmlFor={undefined}
        >
          Port Number
        </label>
        <div
          className="pt-form-content"
        >
          <input
            className="pt-input "
            defaultValue={null}
            name="port"
            onBlur={[Function]}
            onChange={[Function]}
            onDragStart={[Function]}
            onDrop={[Function]}
            onFocus={[Function]}
            required={true}
            type="number"
            value=""
            width={300}
          />
          <div
            className="pt-form-helper-text"
          >
            A port to connect to. Example, 80, 8080, 443, ...
          </div>
        </div>
      </div>
    </div>
    <div
      style={
        Object {
          "display": "block",
        }
      }
    >
      <div
        className="pt-form-group"
      >
        <label
          className="pt-label"
          htmlFor={undefined}
        >
          Root Path
        </label>
        <div
          className="pt-form-content"
        >
          <input
            className="pt-input "
            defaultValue={null}
            name="path"
            onBlur={[Function]}
            onChange={[Function]}
            onDragStart={[Function]}
            onDrop={[Function]}
            onFocus={[Function]}
            required={false}
            type="text"
            value=""
            width={300}
          />
          <div
            className="pt-form-helper-text"
          >
            A path to interact with API (Optional), example /api
          </div>
        </div>
      </div>
    </div>
    <div
      style={
        Object {
          "display": "block",
        }
      }
    >
      <div
        className="pt-form-group"
      >
        <label
          className="pt-label"
          htmlFor={undefined}
        >
          SSL/TLS
        </label>
        <div
          className="pt-form-content"
        >
          <label
            className="pt-control pt-switch"
          >
            <input
              className=""
              defaultChecked={false}
              intent=""
              name="ssl"
              onBlur={[Function]}
              onChange={[Function]}
              onDragStart={[Function]}
              onDrop={[Function]}
              onFocus={[Function]}
              type="checkbox"
              value=""
            />
            <span
              className="pt-control-indicator"
            />
            SSL/TLS
          </label>
          <div
            className="pt-form-helper-text"
          >
            SSL/TLS encryption
          </div>
        </div>
      </div>
    </div>
    <div
      style={
        Object {
          "display": "block",
        }
      }
    >
      <div
        className="pt-form-group"
      >
        <label
          className="pt-label"
          htmlFor={undefined}
        >
          Authentication Type
        </label>
        <div
          className="pt-form-content"
        >
          <div
            className="pt-select"
          >
            <select
              name="authType"
              onBlur={[Function]}
              onChange={[Function]}
              onDragStart={[Function]}
              onDrop={[Function]}
              onFocus={[Function]}
              type="select"
              value=""
              width={300}
            >
              <option
                value="basic"
              >
                Basic
              </option>
              <option
                value="token"
              >
                Token
              </option>
            </select>
          </div>
          <div
            className="pt-form-helper-text"
          >
            Basic or Token-based authentication
          </div>
        </div>
      </div>
    </div>
    <div
      style={
        Object {
          "display": "block",
        }
      }
    >
      <div
        className="pt-form-group"
      >
        <label
          className="pt-label"
          htmlFor={undefined}
        >
          Token Type
        </label>
        <div
          className="pt-form-content"
        >
          <input
            className="pt-input "
            defaultValue="Token"
            name="tokenType"
            onBlur={[Function]}
            onChange={[Function]}
            onDragStart={[Function]}
            onDrop={[Function]}
            onFocus={[Function]}
            required={false}
            type="text"
            value=""
            width={300}
          />
          <div
            className="pt-form-helper-text"
          >
            The token name used for authentication, case sensitive (Token, Bearer)
          </div>
        </div>
      </div>
    </div>
    <div
      style={
        Object {
          "display": "block",
        }
      }
    >
      <div
        className="pt-form-group"
      >
        <label
          className="pt-label"
          htmlFor={undefined}
        >
          Username
        </label>
        <div
          className="pt-form-content"
        >
          <input
            className="pt-input "
            defaultValue={null}
            name="username"
            onBlur={[Function]}
            onChange={[Function]}
            onDragStart={[Function]}
            onDrop={[Function]}
            onFocus={[Function]}
            required={true}
            type="text"
            value=""
            width={300}
          />
          <div
            className="pt-form-helper-text"
          >
            Basic Auth Username
          </div>
        </div>
      </div>
    </div>
    <div
      style={
        Object {
          "display": "block",
        }
      }
    >
      <div
        className="pt-form-group"
      >
        <label
          className="pt-label"
          htmlFor={undefined}
        >
          Password
        </label>
        <div
          className="pt-form-content"
        >
          <input
            className="pt-input "
            defaultValue={null}
            name="password"
            onBlur={[Function]}
            onChange={[Function]}
            onDragStart={[Function]}
            onDrop={[Function]}
            onFocus={[Function]}
            required={false}
            type="password"
            value=""
            width={300}
          />
          <div
            className="pt-form-helper-text"
          >
            Basic Auth Password
          </div>
        </div>
      </div>
    </div>
    <button
      className="pt-button pt-icon-add pt-button pt-intent-primary"
      disabled={undefined}
      onClick={undefined}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      type="submit"
    >
      <span>
        Add Server
      </span>
    </button>
  </form>
</div>
`;
